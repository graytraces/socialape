[{"C:\\workspace\\socialape\\socialape-client\\src\\index.js":"1","C:\\workspace\\socialape\\socialape-client\\src\\App.js":"2","C:\\workspace\\socialape\\socialape-client\\src\\pages\\signup.js":"3","C:\\workspace\\socialape\\socialape-client\\src\\pages\\home.js":"4","C:\\workspace\\socialape\\socialape-client\\src\\pages\\login.js":"5","C:\\workspace\\socialape\\socialape-client\\src\\util\\theme.js":"6","C:\\workspace\\socialape\\socialape-client\\src\\util\\AuthRoute.js":"7","C:\\workspace\\socialape\\socialape-client\\src\\redux\\store.js":"8","C:\\workspace\\socialape\\socialape-client\\src\\redux\\reducers\\dataReducer.js":"9","C:\\workspace\\socialape\\socialape-client\\src\\redux\\reducers\\userReducer.js":"10","C:\\workspace\\socialape\\socialape-client\\src\\redux\\reducers\\uiReducer.js":"11","C:\\workspace\\socialape\\socialape-client\\src\\redux\\types.js":"12","C:\\workspace\\socialape\\socialape-client\\src\\redux\\actions\\userActions.js":"13","C:\\workspace\\socialape\\socialape-client\\src\\util\\MyButton.js":"14","C:\\workspace\\socialape\\socialape-client\\src\\redux\\actions\\dataActions.js":"15","C:\\workspace\\socialape\\socialape-client\\src\\reportWebVitals.js":"16","C:\\workspace\\socialape\\socialape-client\\src\\component\\Navbar.js":"17","C:\\workspace\\socialape\\socialape-client\\src\\component\\Profile.js":"18","C:\\workspace\\socialape\\socialape-client\\src\\component\\Scream.js":"19","C:\\workspace\\socialape\\socialape-client\\src\\component\\EditDetails.js":"20"},{"size":494,"mtime":1610936852360,"results":"21","hashOfConfig":"22"},{"size":2009,"mtime":1610936852352,"results":"23","hashOfConfig":"22"},{"size":4692,"mtime":1610936852364,"results":"24","hashOfConfig":"22"},{"size":1247,"mtime":1610936852362,"results":"25","hashOfConfig":"22"},{"size":3701,"mtime":1610936852363,"results":"26","hashOfConfig":"22"},{"size":837,"mtime":1610936852379,"results":"27","hashOfConfig":"22"},{"size":593,"mtime":1610936852376,"results":"28","hashOfConfig":"22"},{"size":627,"mtime":1610936852372,"results":"29","hashOfConfig":"22"},{"size":897,"mtime":1610936852369,"results":"30","hashOfConfig":"22"},{"size":1185,"mtime":1610936852371,"results":"31","hashOfConfig":"22"},{"size":594,"mtime":1610936852370,"results":"32","hashOfConfig":"22"},{"size":603,"mtime":1610936852373,"results":"33","hashOfConfig":"22"},{"size":2232,"mtime":1610936852368,"results":"34","hashOfConfig":"22"},{"size":344,"mtime":1610936852378,"results":"35","hashOfConfig":"22"},{"size":1101,"mtime":1610936852367,"results":"36","hashOfConfig":"22"},{"size":375,"mtime":1610936852374,"results":"37","hashOfConfig":"22"},{"size":1927,"mtime":1610936852356,"results":"38","hashOfConfig":"22"},{"size":5598,"mtime":1610936852357,"results":"39","hashOfConfig":"22"},{"size":3498,"mtime":1610936852358,"results":"40","hashOfConfig":"22"},{"size":4002,"mtime":1610936852354,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"123f5ag",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},"C:\\workspace\\socialape\\socialape-client\\src\\index.js",[],["90","91"],"C:\\workspace\\socialape\\socialape-client\\src\\App.js",[],"C:\\workspace\\socialape\\socialape-client\\src\\pages\\signup.js",[],"C:\\workspace\\socialape\\socialape-client\\src\\pages\\home.js",["92"],"import React from 'react';\nimport Grid from '@material-ui/core/Grid'\nimport PropTypes from 'prop-types'\n\n// Redux\nimport { connect } from 'react-redux'\nimport { getScreams } from '../redux/actions/dataActions'\n\n\nimport Scream from '../components/scream/Scream'\nimport Profile from '../components/profile/Profile'\n\nclass home extends React.Component{\n   state = {\n       screams: null\n   }\n    componentDidMount(){\n        this.props.getScreams();\n   }\n   \n\n    render(){\n        const { screams, loading } = this.props.data\n        let recentScreamsMarkup = !loading ? (\n            screams.map(scream => <Scream key={scream.screamId} scream={scream} />)\n        ) : <p>loading ...</p>\n\n        return (\n            <Grid container spacing={2}>\n                <Grid item sm={8} xs={12}>\n                    {recentScreamsMarkup}\n                </Grid>\n                <Grid item sm={4} xs={12}>\n                    <Profile />\n                </Grid>\n            </Grid>\n        )\n    }\n} \n\nhome.propTypes = {\n    data: PropTypes.object.isRequired,\n    getScreams: PropTypes.func.isRequired\n}\n\nconst mapActionsToProps = {\n    getScreams\n}\n\nconst mapStateToProps = (state) => {\n    return {data: state.data}\n  };\n\nexport default connect(mapStateToProps, mapActionsToProps)(home);\n","C:\\workspace\\socialape\\socialape-client\\src\\pages\\login.js",[],"C:\\workspace\\socialape\\socialape-client\\src\\util\\theme.js",[],"C:\\workspace\\socialape\\socialape-client\\src\\util\\AuthRoute.js",[],"C:\\workspace\\socialape\\socialape-client\\src\\redux\\store.js",[],"C:\\workspace\\socialape\\socialape-client\\src\\redux\\reducers\\dataReducer.js",["93"],"import { SET_SCREAMS, LIKE_SCREAM, UNLIKE_SCREAM, LOADING_DATA, DELETE_SCREAM, POST_SCREAM, SET_SCREAM, SUBMIT_COMMENT} from '../types';\n\nconst initialState= {\n    screams: [],\n    scream: {},\n    loading: false\n}\n\n\nexport default function(state = initialState, action){\n    let index;\n    switch(action.type){\n        case SET_SCREAMS:\n            return {\n                ...state,\n                screams: action.payload,\n                loading: false\n            }\n        case SET_SCREAM:\n            return {\n                ...state,\n                scream: action.payload\n            }\n        case LIKE_SCREAM:\n        case UNLIKE_SCREAM:\n            index = state.screams.findIndex((scream) => scream.screamId === action.payload.screamId)\n            state.screams[index] = action.payload;\n            if(state.scream.screamId === action.payload.screamId){\n                state.scream = action.payload\n            }\n            return {\n                ...state\n            }\n        case LOADING_DATA:\n           return{\n            ...state,\n            loading: true\n           } \n        case DELETE_SCREAM:\n            index = state.screams.findIndex(scream => scream.screamId === action.payload);\n            state.screams.splice(index, 1);\n            return {\n                ...state\n            }\n        case POST_SCREAM:\n            return {\n                ...state, \n                screams: [\n                    action.payload,\n                    ...state.screams\n                ]\n            }\n        case SUBMIT_COMMENT:\n            return {\n                ...state,\n                scream: {\n                    ...state.scream,\n                    comments: [action.payload, ...state.scream.comments]\n                }\n            }\n        default:\n                return {\n                    ...state, \n\n                }\n    }\n}","C:\\workspace\\socialape\\socialape-client\\src\\redux\\reducers\\userReducer.js",["94"],"import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USER, LIKE_SCREAM, UNLIKE_SCREAM, MARK_NOTIFICATIONS_READ } from '../types';\n\nconst initialState = {\n    authenticated: false,\n    credentials: {},\n    likes: [],\n    notifications: [],\n    loading: false,\n};\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case SET_AUTHENTICATED:\n            return {\n                ...state,\n                authenticated: true\n            }\n        case SET_UNAUTHENTICATED:\n            return initialState;\n        case SET_USER:\n            return {\n                authenticated: true,\n                loading:false,\n                ...action.payload\n            }\n        case LOADING_USER:\n            return {\n                ...state,\n                loading: true\n            }\n        case LIKE_SCREAM:\n            return {\n                ...state,\n                likes: [\n                    ...state.likes, \n                    {\n                        userHandle: state.credentials.handle,\n                        screamId: action.payload.screamId\n                    }\n                ]\n            }\n        case UNLIKE_SCREAM:\n            return {\n                ...state,\n                likes: state.likes.filter(like => like.screamId !== action.payload.screamId)\n            }\n        case MARK_NOTIFICATIONS_READ:\n            state.notifications.forEach(noty => noty.read = true);\n            return{\n                ...state\n            }\n        default:\n            return state;\n    }\n}\n","C:\\workspace\\socialape\\socialape-client\\src\\redux\\reducers\\uiReducer.js",["95"],"import { SET_ERRORS, CLEAR_ERRORS, LOADING_UI } from \"../types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errors: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_ERRORS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: action.payload,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: null,\r\n      };\r\n    case LOADING_UI:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\workspace\\socialape\\socialape-client\\src\\redux\\types.js",[],"C:\\workspace\\socialape\\socialape-client\\src\\redux\\actions\\userActions.js",[],"C:\\workspace\\socialape\\socialape-client\\src\\util\\MyButton.js",["96"],"import React from 'react';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport default ({ children, onClick, tip, btnClassName, tipClassName }) => (\n    <Tooltip title={tip} className={tipClassName} placement=\"top\">\n        <IconButton onClick={onClick} className={btnClassName}>\n            {children}\n        </IconButton>\n    </Tooltip>\n)","C:\\workspace\\socialape\\socialape-client\\src\\redux\\actions\\dataActions.js",[],"C:\\workspace\\socialape\\socialape-client\\src\\reportWebVitals.js",[],"C:\\workspace\\socialape\\socialape-client\\src\\component\\Navbar.js",[],"C:\\workspace\\socialape\\socialape-client\\src\\component\\Profile.js",[],"C:\\workspace\\socialape\\socialape-client\\src\\component\\Scream.js",["97"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//MUI import\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { Card, CardContent, CardMedia, Typography } from \"@material-ui/core\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { likeScream, unlikeScream } from \"../redux/actions/dataActions\";\r\nimport MyButton from \"../util/MyButton\";\r\n\r\nconst styles = {\r\n  card: {\r\n    display: \"flex\",\r\n    marginBottom: 20,\r\n  },\r\n  image: {\r\n    minWidth: 200,\r\n    objectFit: \"cover\",\r\n  },\r\n  content: {\r\n    padding: 25,\r\n  },\r\n};\r\n\r\nclass Scream extends Component {\r\n  likedScream = () => {\r\n    if (\r\n      this.props.user.likes &&\r\n      this.props.user.likes.find(\r\n        (like) => like.screamId === this.props.scream.screamId\r\n      )\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  likeScream = () => {\r\n    this.props.likeScream(this.props.scream.screamId);\r\n  };\r\n\r\n  unlikeScream = () => {\r\n    this.props.unlikeScream(this.props.scream.screamId);\r\n  };\r\n\r\n  render() {\r\n    dayjs.extend(relativeTime);\r\n\r\n    const {\r\n      classes,\r\n      scream: {\r\n        body,\r\n        createdAt,\r\n        userImage,\r\n        userHandle,\r\n        screamId,\r\n        likeCount,\r\n        commentCount,\r\n      },\r\n      user: { authenticated },\r\n    } = this.props;\r\n\r\n    const likeButton = !authenticated ? (\r\n      <MyButton tip=\"Like\">\r\n        <Link to=\"/login\">\r\n          <FavoriteBorder color=\"primary\" />\r\n        </Link>\r\n      </MyButton>\r\n    ) : this.likedScream() ? (\r\n      <MyButton tip=\"Undo like\" onClick={this.unlikeScream}>\r\n        <FavoriteIcon color=\"primary\" />\r\n      </MyButton>\r\n    ) : (\r\n      <MyButton tip=\"Like\" onClick={this.likeScream}>\r\n        <FavoriteBorder color=\"primary\" />\r\n      </MyButton>\r\n    );\r\n\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardMedia\r\n          className={classes.image}\r\n          image={userImage}\r\n          title=\"Profile image\"\r\n        />\r\n        <CardContent className={classes.content}>\r\n          <Typography\r\n            variant=\"h5\"\r\n            component={Link}\r\n            to={`/users/${userHandle}`}\r\n            color=\"primary\"\r\n          >\r\n            {userHandle}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {dayjs(createdAt).fromNow()}\r\n          </Typography>\r\n          <Typography variant=\"body1\">{body}</Typography>\r\n          {likeButton}\r\n          <span>{likeCount} Likes</span>\r\n          <MyButton tip=\"comments\">\r\n            <ChatIcon color=\"primary\" />\r\n          </MyButton>\r\n          <span>{commentCount} comments </span>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nScream.propTypes = {\r\n  likeScream: PropTypes.func.isRequired,\r\n  unlikeScream: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  scream: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStatToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  likeScream,\r\n  unlikeScream,\r\n};\r\n\r\nexport default connect(\r\n  mapStatToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(Scream));\r\n","C:\\workspace\\socialape\\socialape-client\\src\\component\\EditDetails.js",["98"],"import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { editUserDetails } from \"../redux/actions/userActions\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport MyButton from \"../util/MyButton\";\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.custom,\r\n  button: {\r\n    float: \"right\",\r\n  },\r\n});\r\n\r\nclass EditDetails extends Component {\r\n  state = {\r\n    bio: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    open: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { credentials } = this.props;\r\n    this.mapUserDetailsToState(this.props.credentials);\r\n  }\r\n\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n    this.mapUserDetailsToState(this.props.credentials);\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  mapUserDetailsToState = (credentials) => {\r\n    this.setState({\r\n      bio: credentials.bio ? credentials.bio : \"\",\r\n      website: credentials.website ? credentials.website : \"\",\r\n      location: credentials.location ? credentials.location : \"\",\r\n    });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const userDetails = {\r\n      bio: this.state.bio,\r\n      website: this.state.website,\r\n      location: this.state.location,\r\n    };\r\n    this.props.editUserDetails(userDetails);\r\n    this.handleClose();\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <MyButton\r\n          tip=\"Edit detils\"\r\n          onClick={this.handleOpen}\r\n          btnClassName={classes.button}\r\n        >\r\n          <EditIcon color=\"primary\" />\r\n        </MyButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <DialogTitle>Edit your details</DialogTitle>\r\n          <DialogContent>\r\n            <form>\r\n              <TextField\r\n                name=\"bio\"\r\n                type=\"text\"\r\n                label=\"Bio\"\r\n                multiline\r\n                rows=\"3\"\r\n                placeholder=\"A short bio about yourself\"\r\n                className={classes.textField}\r\n                value={this.state.bio}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                name=\"website\"\r\n                type=\"text\"\r\n                label=\"Website\"\r\n                placeholder=\"Your personal/professional website\"\r\n                className={classes.textField}\r\n                value={this.state.website}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                name=\"location\"\r\n                type=\"text\"\r\n                label=\"Location\"\r\n                placeholder=\"where you live\"\r\n                className={classes.textField}\r\n                value={this.state.location}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n            </form>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleSubmit} color=\"primary\">\r\n              Save\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatToProps = (state) => ({\r\n  credentials: state.user.credentials,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  editUserDetails,\r\n};\r\n\r\nEditDetails.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(\r\n  mapStatToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(EditDetails));\r\n",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":13},{"ruleId":"107","severity":1,"message":"108","line":14,"column":1,"nodeType":"109","endLine":42,"endColumn":2},{"ruleId":"107","severity":1,"message":"108","line":18,"column":1,"nodeType":"109","endLine":57,"endColumn":2},{"ruleId":"107","severity":1,"message":"108","line":8,"column":1,"nodeType":"109","endLine":30,"endColumn":2},{"ruleId":"107","severity":1,"message":"110","line":4,"column":1,"nodeType":"109","endLine":10,"endColumn":2},{"ruleId":"103","severity":1,"message":"111","line":65,"column":9,"nodeType":"105","messageId":"106","endLine":65,"endColumn":17},{"ruleId":"103","severity":1,"message":"112","line":35,"column":13,"nodeType":"105","messageId":"106","endLine":35,"endColumn":24},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","'screamId' is assigned a value but never used.","'credentials' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]